{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5ea528ba",
   "metadata": {},
   "source": [
    "## Gradient flow"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "080c74f1",
   "metadata": {},
   "source": [
    "Willmore flow (Willmore能量的L2梯度流). Energy functional\n",
    "\\begin{align*}\n",
    "E( \\Gamma) = \\frac12 \\int_ \\Gamma H^2 \n",
    "\\end{align*}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63c5cb87",
   "metadata": {},
   "source": [
    "应用：\n",
    "* image processing\n",
    "* modeling of biological membranes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c97f98c4",
   "metadata": {},
   "source": [
    "Considering an evolving surface $\\Gamma(t)$ with normal velocity field $v = Vn$. Then\n",
    "\\begin{align*}\n",
    "\\delta E[ \\Gamma](V) = \\dfrac{d}{dt}|_{t=0} E( \\Gamma) \n",
    "&= \\dfrac{d}{dt} (\\frac12 \\int_ \\Gamma H^2) = \n",
    "\\int_ \\Gamma H { \\partial_t^\\bullet} H + \\frac12 H^2 \\nabla_ \\Gamma\\cdot v\\\\\n",
    "&= \\int_ \\Gamma H { \\partial_t^\\bullet} H + \\frac12 H^3 V\\\\\n",
    "&= \\int_ \\Gamma (- \\Delta_ \\Gamma H -|A|^2 H + \\frac12 H^3)V \n",
    "\\end{align*}\n",
    "where the last line is from integration by part（分部积分） and the evolution equation（演化方程）\n",
    "\\begin{align*}\n",
    "{ \\partial_t^\\bullet} H = - \\Delta_ \\Gamma V - |A|^2 V\n",
    "\\end{align*}\n",
    "Now we seek the gradient of the functional, which is the Riesz representative of the Frechet's derivative\n",
    "\\begin{align*}\n",
    "( \\dfrac{ \\delta E }{ \\delta V}, V)_H = \\delta E[ \\Gamma](V).\n",
    "\\end{align*}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "478ea027",
   "metadata": {},
   "source": [
    "### $L^2$ gradient flow -- Willmore flow\n",
    "Taking $H = L^2( \\Gamma)$, then the gradient flow is \n",
    "\\begin{align*}\n",
    "V = -\\dfrac{ \\delta E }{ \\delta V} = \\Delta_ \\Gamma H + |A|^2 H - \\frac12 H^3\n",
    "\\end{align*}\n",
    "This is the Willmore flow."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "273de9e0",
   "metadata": {},
   "source": [
    "### Harmonic map heat flow\n",
    "* Star流；对所有的$v$满足 $v\\cdot u =0$的限制，求解满足 $\\partial_t u\\cdot u = 0$以及\n",
    "\\begin{align*}\n",
    "(\\partial_t u, v)_{\\star} + (\\nabla u, \\nabla v) = 0\n",
    "\\end{align*}\n",
    "的解\n",
    "* 如果时间导数选取的是H1范数，则相当于是\n",
    "\\begin{align*}\n",
    "\\partial_t u = (\\Delta)^{-1} \\Delta u\n",
    "\\end{align*}\n",
    "第一个$(\\Delta)^{-1}$对应的正是$H^1$梯度流\n",
    "* 相反的，如果是$H^{-1}$梯度流，正如surface diffusion那样，会额外多出Laplacian。因此，现在空间算子具有更大的domain，让它更加可能接近RK的最优阶"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "736d56c1",
   "metadata": {},
   "source": [
    "\\begin{align*}\n",
    "h^2 \\int_F d_t e \\nabla d_t e \\cdot n\n",
    "&\\lesssim\n",
    "h^2 ( \\epsilon^{-1} h^{-1}\\| d_t e \\|_{F}^2 + \\epsilon h \\|\\nabla d_t e\\|_{F}^2 )\\\\\n",
    "&\\lesssim\n",
    "\\epsilon^{-1} h\\| d_t e \\|_{F}^2 + \\epsilon h^2 \\|\\nabla d_t e\\|_{T}^2 \n",
    "\\end{align*}\n",
    "第二项被分部积分的正项吸收。第一项可以用迹不等式\n",
    "\\begin{align*}\n",
    "\\lesssim \\epsilon^{-1} \\| d_t e \\|_{T}^2\n",
    "\\end{align*}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "695585b8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
